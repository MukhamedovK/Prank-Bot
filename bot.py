import logging
import datetime

from aiogram import Bot, Dispatcher, executor
from aiogram.types import *
from keyboard import start_btn, order_prank_btn, my_pranks_btn, cabinet_btn, premium_btn


logging.basicConfig(level=logging.INFO)

BOT_TOKEN = "6251779786:AAG3lZJXf7u2-r7rBOW29ZhSiCbEL7ZF3zw"


bot = Bot(token=BOT_TOKEN, parse_mode='html')
dp = Dispatcher(bot=bot)


@dp.message_handler(commands=['start'])
async def start_handler(message: Message):
    btn = await start_btn()
    await message.answer("<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–∞–Ω–∫-–ë–æ—Ç–∞ üí•</b>\n\n"
                        "<b>–ß—Ç–æ–±—ã —Ä–∞–∑—ã–≥—Ä–∞—Ç—å —Å–≤–æ–µ–≥–æ –¥—Ä—É–≥–∞ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´<i>–ó–∞–∫–∞–∑–∞—Ç—å –ø—Ä–∞–Ω–∫</i></b>¬ª üëáüèª",
                        reply_markup=btn)
    

@dp.callback_query_handler(text='order')
async def order_prank(call: CallbackQuery):
    btn = await order_prank_btn()
    await call.message.edit_text("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–∞–Ω–∫–æ–≤ üòè", reply_markup=btn)


@dp.callback_query_handler(text='my_pranks')
async def my_pranks(call: CallbackQuery):
    btn = await my_pranks_btn()
    await call.message.edit_text("üîä –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–ª—É—à–∞—Ç—å –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –ø—Ä–∞–Ω–∫–æ–≤.", reply_markup=btn)


@dp.callback_query_handler(text='cabinet')
async def cabinet(call: CallbackQuery):
    btn = await cabinet_btn()
    registration_date = datetime.datetime.now()
    await call.message.edit_text("üßëüèª‚Äçüíª –ö–∞–±–∏–Ω–µ—Ç\n\n"
                                f"üÜî –í–∞—à ID: {call.message.from_user.id}\n"
                                f"üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {registration_date}\n\n"
                                "üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: <i>0 RUB</i>\n"
                                "üë• –†–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: <i>0</i>\n\n"
                                "üíé –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å: <i>–ù–µ–∞–∫—Ç–∏–≤–µ–Ω</i>", reply_markup=btn)


@dp.callback_query_handler(text='premium')
async def premium(call: CallbackQuery):
    btn = await premium_btn()
    await call.message.edit_text("üíé–ü–†–ï–ú–ò–£–ú –ü–û–î–ü–ò–°–ö–ê:\n\n"
                                "- –ó–∞–∫–∞–∑—ã–≤–∞–π <b>–ø—Ä–∞–Ω–∫–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π 30%</b>‚ö°Ô∏è\n"
                                "- <b>–í—ã–±–∏—Ä–∞–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b> —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –ø—Ä–∞–Ω–∫–∏\n‚òéÔ∏è\n"
                                "- –ü–æ–ª—É—á–∞–π <b>–∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –Ω–∞ 10% –±–æ–ª—å—à–µ</b> üìà\n\n"
                                "–£—Å–ø–µ–π –∫—É–ø–∏—Ç—å –ø—Ä–µ–º–∏—É–º —Å–æ —Å–∫–∏–¥–∫–æ–π –≤—Å–µ–≥–æ –∑–∞ <b>299 —Ä—É–±/–º–µ—Å.</b>‚ùóÔ∏è", reply_markup=btn)


@dp.callback_query_handler(text='back')
async def back(call: CallbackQuery):
    btn = await start_btn()
    await call.message.edit_text("<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–∞–Ω–∫-–ë–æ—Ç–∞ üí•</b>\n\n"
                                 "<b>–ß—Ç–æ–±—ã —Ä–∞–∑—ã–≥—Ä–∞—Ç—å —Å–≤–æ–µ–≥–æ –¥—Ä—É–≥–∞ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´<i>–ó–∞–∫–∞–∑–∞—Ç—å –ø—Ä–∞–Ω–∫</i></b>¬ª üëáüèª", reply_markup=btn)




if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
